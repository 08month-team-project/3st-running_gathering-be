plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.4'
    id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.runto'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

repositories {
    mavenCentral()
}

dependencies {

    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-batch'
    testImplementation 'org.springframework.batch:spring-batch-test'

    // lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // 인증관련
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'org.springframework.batch:spring-batch-test'


    // 데이터베이스 관련
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    runtimeOnly 'com.mysql:mysql-connector-j'
    runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'

    // 쿼리 파라미터 로그 남기는 라이브러리 (운영 환경에서는 성능상 제외하는게 좋을 수 있음)
    implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.9.0'

    // Redis
    //implementation 'org.springframework.boot:spring-boot-starter-data-redis'


    //env 파일 읽기
    implementation 'me.paulschwarz:spring-dotenv:3.0.0'


    // s3 기능 추가
    implementation 'io.awspring.cloud:spring-cloud-aws-starter-s3:3.1.1'

    // 이미지 최적화 관련
    implementation 'com.sksamuel.scrimage:scrimage-core:4.1.3'
    implementation 'com.sksamuel.scrimage:scrimage-webp:4.1.3'


    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    //jwt
    implementation 'io.jsonwebtoken:jjwt-api:0.12.3'
    implementation 'io.jsonwebtoken:jjwt-impl:0.12.3'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.12.3'

    //Swagger
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2'

    //Querydsl 추가
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

    //WebSocket
    implementation 'org.springframework.boot:spring-boot-starter-websocket'

    //RabbitMQ (amqp)
    implementation 'org.springframework.boot:spring-boot-starter-amqp'

    //MongoDB
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'

    //Querydsl,  자동 생성된 Q클래스 gradle clean으로 제거
    clean {
        delete file('src/main/generated')
    }


    implementation 'org.springframework.boot:spring-boot-starter-mail'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect'

}

tasks.named('test') {
    useJUnitPlatform()
}