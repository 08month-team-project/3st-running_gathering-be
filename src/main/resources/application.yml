spring:
  profiles:
    group:
      local: local
  # .env import
  config:
    import: optional:file:.env[.properties]
---
spring:
  config:
    activate:
      on-profile: local
  datasource:
    driver-class-name: ${DB_DRIVER}
    url: ${DB_URL}
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}

  servlet:
    multipart:
      max-file-size: 5MB # 최대 파일 사이즈
      max-request-size: 5MB # 최대 요청 사이즈

  jpa:
    hibernate:
      ddl-auto: create
    show-sql: true
    properties:
      hibernate:
        format_sql: true
    open-in-view: false
    defer-datasource-initialization: true

  cloud:
    aws:
      credentials:
        access_key: ${AWS_ACCESS_KEY}
        secret_key: ${AWS_SECRET_KEY}
      s3:
        bucket: ${BUCKET}
      region:
        static: ${STATIC_REGION}

  jwt:
    secret: ${SECRET_KEY}

  data:
    redis:
      host: ${REDIS_HOST}
      port: ${REDIS_PORT}
      password: ${REDIS_PASSWORD}

    mongodb:
      uri: ${MONGO_DB_URI}

  rabbitmq:
    host: ${RABBIT_HOST}
    username: ${RABBIT_USERNAME}
    password: ${RABBIT_PASSWORD}
    port: ${RABBIT_PORT}

logging:
  level:
    org.hibernate.SQL: debug
    org.hibernate.orm.jdbc.bind: trace

rabbit:
  exchange: ${RABBIT_EXCHANGE}
  direct:
    queue: ${DIRECT_QUEUE_NAME}
    routing: ${DIRECT_ROUTING_KEY}
  group:
    queue: ${GROUP_QUEUE_NAME}
    routing: ${GROUP_ROUTING_KEY}
  dl:
    exchange: ${RABBIT_DL_EXCHANGE}
    queue: ${DEAD_LETTER_QUEUE}
    routing: ${DEAD_LETTER_ROUTING_KEY}